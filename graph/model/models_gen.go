// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Avatar struct {
	Large  string `json:"large"`
	Medium string `json:"medium"`
	Small  string `json:"small"`
}

type Character struct {
	Collects int32                      `json:"collects"`
	Comment  int32                      `json:"comment"`
	ID       int32                      `json:"id"`
	Images   *Images                    `json:"images,omitempty"`
	Infobox  []*Infobox                 `json:"infobox,omitempty"`
	LastPost int32                      `json:"last_post"`
	Lock     int32                      `json:"lock"`
	Name     string                     `json:"name"`
	Nsfw     bool                       `json:"nsfw"`
	Persons  []*CharacterRelatedPerson  `json:"persons,omitempty"`
	Redirect int32                      `json:"redirect"`
	Role     int32                      `json:"role"`
	Subjects []*CharacterRelatedSubject `json:"subjects,omitempty"`
	Summary  string                     `json:"summary"`
}

type CharacterRelatedPerson struct {
	Person  *SlimPerson  `json:"person"`
	Subject *SlimSubject `json:"subject"`
	Summary string       `json:"summary"`
}

type CharacterRelatedSubject struct {
	Order   int32        `json:"order"`
	Subject *SlimSubject `json:"subject"`
	Type    int32        `json:"type"`
}

type Episode struct {
	Airdate     string  `json:"airdate"`
	Comment     int32   `json:"comment"`
	Description string  `json:"description"`
	Disc        int32   `json:"disc"`
	Duration    string  `json:"duration"`
	ID          int32   `json:"id"`
	LastPost    int32   `json:"last_post"`
	Name        string  `json:"name"`
	NameCn      string  `json:"name_cn"`
	Sort        float64 `json:"sort"`
	Type        int32   `json:"type"`
}

type Images struct {
	Grid   string `json:"grid"`
	Large  string `json:"large"`
	Medium string `json:"medium"`
	Small  string `json:"small"`
}

type Infobox struct {
	Key    string          `json:"key"`
	Values []*InfoboxValue `json:"values,omitempty"`
}

type InfoboxValue struct {
	K *string `json:"k,omitempty"`
	V *string `json:"v,omitempty"`
}

type Person struct {
	Career     []string                  `json:"career"`
	Characters []*PersonRelatedCharacter `json:"characters,omitempty"`
	Collects   int32                     `json:"collects"`
	Comment    int32                     `json:"comment"`
	ID         int32                     `json:"id"`
	Images     *Images                   `json:"images,omitempty"`
	Infobox    []*Infobox                `json:"infobox,omitempty"`
	LastPost   int32                     `json:"last_post"`
	Lock       int32                     `json:"lock"`
	Name       string                    `json:"name"`
	Nsfw       bool                      `json:"nsfw"`
	Redirect   int32                     `json:"redirect"`
	Subjects   []*PersonRelatedSubject   `json:"subjects,omitempty"`
	Summary    string                    `json:"summary"`
	Type       int32                     `json:"type"`
}

type PersonRelatedCharacter struct {
	Character *SlimCharacter `json:"character"`
	Subject   *SlimSubject   `json:"subject"`
	Summary   string         `json:"summary"`
}

type PersonRelatedSubject struct {
	Position int32        `json:"position"`
	Subject  *SlimSubject `json:"subject"`
}

type Query struct {
}

// basic character info as field of other types to avoid recursive query
type SlimCharacter struct {
	Collects int32      `json:"collects"`
	Comment  int32      `json:"comment"`
	ID       int32      `json:"id"`
	Images   *Images    `json:"images,omitempty"`
	Infobox  []*Infobox `json:"infobox,omitempty"`
	LastPost int32      `json:"last_post"`
	Lock     int32      `json:"lock"`
	Name     string     `json:"name"`
	Nsfw     bool       `json:"nsfw"`
	Redirect int32      `json:"redirect"`
	Role     int32      `json:"role"`
	Summary  string     `json:"summary"`
}

// basic person info as field of other types to avoid recursive query
type SlimPerson struct {
	Career   []string   `json:"career"`
	Collects int32      `json:"collects"`
	Comment  int32      `json:"comment"`
	ID       int32      `json:"id"`
	Images   *Images    `json:"images,omitempty"`
	Infobox  []*Infobox `json:"infobox,omitempty"`
	LastPost int32      `json:"last_post"`
	Lock     int32      `json:"lock"`
	Name     string     `json:"name"`
	Nsfw     bool       `json:"nsfw"`
	Redirect int32      `json:"redirect"`
	Summary  string     `json:"summary"`
	Type     int32      `json:"type"`
}

// a subject as field of other types to avoid recursive query
type SlimSubject struct {
	Airtime     *SubjectAirtime  `json:"airtime"`
	Eps         int32            `json:"eps"`
	ID          int32            `json:"id"`
	Images      *SubjectImages   `json:"images,omitempty"`
	Infobox     []*Infobox       `json:"infobox,omitempty"`
	Locked      bool             `json:"locked"`
	Name        string           `json:"name"`
	NameCn      string           `json:"name_cn"`
	Nsfw        bool             `json:"nsfw"`
	Platform    *SubjectPlatform `json:"platform"`
	Rating      *SubjectRating   `json:"rating"`
	Redirect    int32            `json:"redirect"`
	Series      bool             `json:"series"`
	SeriesEntry int32            `json:"series_entry"`
	Summary     string           `json:"summary"`
	Type        int32            `json:"type"`
	Volumes     int32            `json:"volumes"`
}

type Subject struct {
	Airtime     *SubjectAirtime            `json:"airtime"`
	Characters  []*SubjectRelatedCharacter `json:"characters,omitempty"`
	Collection  *SubjectCollection         `json:"collection"`
	Episodes    []*Episode                 `json:"episodes,omitempty"`
	Eps         int32                      `json:"eps"`
	ID          int32                      `json:"id"`
	Images      *SubjectImages             `json:"images,omitempty"`
	Infobox     []*Infobox                 `json:"infobox,omitempty"`
	Locked      bool                       `json:"locked"`
	Name        string                     `json:"name"`
	NameCn      string                     `json:"name_cn"`
	Nsfw        bool                       `json:"nsfw"`
	Persons     []*SubjectRelatedPerson    `json:"persons,omitempty"`
	Platform    *SubjectPlatform           `json:"platform"`
	Rating      *SubjectRating             `json:"rating"`
	Redirect    int32                      `json:"redirect"`
	Relations   []*SubjectRelation         `json:"relations,omitempty"`
	Series      bool                       `json:"series"`
	SeriesEntry int32                      `json:"series_entry"`
	Summary     string                     `json:"summary"`
	Tags        []*SubjectTag              `json:"tags"`
	Topics      []*SubjectTopic            `json:"topics,omitempty"`
	Type        int32                      `json:"type"`
	Volumes     int32                      `json:"volumes"`
}

type SubjectAirtime struct {
	Date    string `json:"date"`
	Month   int32  `json:"month"`
	Weekday int32  `json:"weekday"`
	Year    int32  `json:"year"`
}

type SubjectCollection struct {
	Collect int32 `json:"collect"`
	Doing   int32 `json:"doing"`
	Dropped int32 `json:"dropped"`
	OnHold  int32 `json:"on_hold"`
	Wish    int32 `json:"wish"`
}

type SubjectImages struct {
	Common string `json:"common"`
	Grid   string `json:"grid"`
	Large  string `json:"large"`
	Medium string `json:"medium"`
	Small  string `json:"small"`
}

type SubjectPlatform struct {
	Alias  *string `json:"alias,omitempty"`
	ID     int32   `json:"id"`
	Type   string  `json:"type"`
	TypeCn *string `json:"type_cn,omitempty"`
}

type SubjectRating struct {
	Count []int32 `json:"count,omitempty"`
	Rank  int32   `json:"rank"`
	Score float64 `json:"score"`
	Total int32   `json:"total"`
}

type SubjectRelatedCharacter struct {
	Character *SlimCharacter `json:"character"`
	Order     int32          `json:"order"`
	Type      int32          `json:"type"`
}

type SubjectRelatedPerson struct {
	Person   *SlimPerson `json:"person"`
	Position int32       `json:"position"`
}

type SubjectRelation struct {
	Order    int32        `json:"order"`
	Relation int32        `json:"relation"`
	Subject  *SlimSubject `json:"subject"`
}

type SubjectTag struct {
	Count int32  `json:"count"`
	Name  string `json:"name"`
}

type SubjectTopic struct {
	CreatedAt int32  `json:"created_at"`
	Creator   *User  `json:"creator"`
	Display   int32  `json:"display"`
	ID        int32  `json:"id"`
	Replies   int32  `json:"replies"`
	State     int32  `json:"state"`
	Title     string `json:"title"`
	UpdatedAt int32  `json:"updated_at"`
}

type User struct {
	Avatar   *Avatar `json:"avatar"`
	ID       int32   `json:"id"`
	Nickname string  `json:"nickname"`
	Username string  `json:"username"`
}
